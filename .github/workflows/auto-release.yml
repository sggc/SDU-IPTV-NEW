name: Auto Archive Release

on:
  push:
    branches: [ main, master ]
    paths:
      - '**'  # 可以修改为特定路径，如 'src/**', 'docs/**' 等

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Check for meaningful changes
      id: check-changes
      run: |
        # 排除某些不需要触发release的文件
        EXCLUDE_PATTERNS="README.md|.gitignore|.github/*"
        
        CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD | grep -vE "$EXCLUDE_PATTERNS" | head -1)
        
        if [ -n "$CHANGED_FILES" ]; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "检测到文件变动: $CHANGED_FILES"
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
          echo "无重要文件变动，跳过release"
        fi
    
    - name: Generate archive name
      if: steps.check-changes.outputs.has_changes == 'true'
      id: generate-name
      run: |
        CURRENT_DATE=$(date +'%Y.%-m.%-d')
        
        # 获取所有tag，统计今天的release数量
        git fetch --tags -f
        EXISTING_RELEASES=$(git tag -l "存档$CURRENT_DATE-r*" | wc -l)
        
        NEW_VERSION=$((EXISTING_RELEASES + 1))
        RELEASE_NAME="存档$CURRENT_DATE-r$NEW_VERSION"
        
        echo "release_name=$RELEASE_NAME" >> $GITHUB_OUTPUT
        echo "归档版本: $RELEASE_NAME"
    
    - name: Create Archive Release
      if: steps.check-changes.outputs.has_changes == 'true'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.generate-name.outputs.release_name }}
        name: ${{ steps.generate-name.outputs.release_name }}
        body: |
          自动生成的存档版本
          
          变更文件:
          ${{ steps.check-changes.outputs.CHANGED_FILES }}
          
          生成时间: ${{ steps.generate-name.outputs.CURRENT_DATE }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
